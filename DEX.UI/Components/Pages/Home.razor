@page "/"
@inject IHttpClientFactory HttpClientFactory
@inject IConfiguration Configuration
@using System.Text

<PageTitle>Home</PageTitle>

<h3>DEX File Sender</h3>
<button @onclick='(() => SendDex("Machine A"))'>Send DEX - Machine A</button>
<button @onclick='(() => SendDex("Machine B"))'>Send DEX - Machine B</button>



@code
{
    private HttpClient Http => HttpClientFactory.CreateClient("MyClient");
    private string DexReportMachineA = "";
    private string DexReportMachineB = "";

    protected override async Task OnInitializedAsync()
    {
        DexReportMachineA = await Http.GetStringAsync("DEX_Machine_A.txt");
        DexReportMachineB = await Http.GetStringAsync("DEX_Machine_B.txt");
    }

    private async Task SendDex(string machine)
    {
        var dexData = machine == "Machine A" ? DexReportMachineA : DexReportMachineB;

        var username = Configuration["Authentication:Username"];
        var password = Configuration["Authentication:Password"];

        var authValue = Convert.ToBase64String(Encoding.UTF8.GetBytes($"{username}:{password}"));

        var request = new HttpRequestMessage(HttpMethod.Post, "/vdi-dex")
            {
                Content = new StringContent($"\"{dexData}\"", Encoding.UTF8, "application/json")
            };

        request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Basic", authValue);

        var response = await Http.SendAsync(request);
        var result = await response.Content.ReadAsStringAsync();

        Console.WriteLine(dexData);
    }
}
